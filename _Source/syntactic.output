Terminais sem uso na gramática

   OR
   AND
   NOT
   '+'
   '-'
   '*'
   '/'
   IDF
   NEGACAO
   ASPAS
   ABRE_COLCHETE
   FECHA_COLCHETE
   DOIS_PONTOS
   HASHMARK
   PONTO
   PIPE
   BARRA
   DIFERENTE
   ESPACO
   BARRAN
   BARRAT
   DIGITO
   NUMERAL
   LETRA
   FRAC_OPT
   RES_BREAK
   RES_CASE
   RES_CHAR
   RES_DEFAULT
   RES_DO
   RES_GOTO
   RES_LONG
   RES_RETURN
   RES_SIZEOF
   RES_STATIC
   RES_STRUCT
   RES_TYPEDEF
   RES_VOID
   RES_WHILE
   ALGUMA_COISA


Gramática

    0 $accept: root $end

    1 root: code

    2 code: declaration recursionDec
    3     | declaration recursionDec code
    4     | declaration assignment value recursionOP
    5     | declaration assignment value recursionOP code
    6     | if openParent value boolean_exp value closeParent openKey code closeKey
    7     | if openParent value boolean_exp value closeParent openKey code closeKey code
    8     | if openParent value boolean_exp value closeParent openKey code closeKey else openKey code closeKey
    9     | if value boolean_exp value openKey code closeKey else openKey code closeKey code
   10     | var assignment value recursionOP
   11     | var assignment value recursionOP code
   12     | var openParent closeParent
   13     | var openParent closeParent semi
   14     | var openParent closeParent semi code
   15     | var openParent closeParent openKey code closeKey code
   16     | var openParent parameters closeParent
   17     | var openParent parameters closeParent semi
   18     | var openParent parameters closeParent semi code
   19     | var openParent parameters closeParent openKey code closeKey code
   20     | for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey code

   22 for: RES_FOR

   23 parameters: value
   24           | value comma parameters

   25 recursionOP: semi
   26            | op value recursionOP

   27 recursionDec: semi
   28             | comma declaration recursionDec

   29 assignment: ATRIBUICAO

   30 var: NOME

   31 semi: PONTO_E_VIRGULA

   32 comma: VIRGULA

   33 if: RES_IF

   34 else: RES_ELSE

   35 openKey: ABRE_CHAVE

   36 closeKey: FECHA_CHAVE

   37 openParent: ABRE_PARENTESES

   38 closeParent: FECHA_PARENTESES

   39 declaration: type var

   40 boolean_exp: IGUAL
   41            | MAIOR
   42            | MENOR
   43            | MAIOR_IGUAL
   44            | MENOR_IGUAL

   45 op: SOMA
   46   | SUBTRACAO
   47   | MULTIPLICACAO
   48   | DIVISAO
   49   | RESTO

   50 value: var
   51      | NUM

   52 type: RES_FLOAT
   53     | RES_INT
   54     | STRING
   55     | RES_DOUBLE
   56     | RES_BOOL


Terminais, com as regras onde eles aparecem

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
OR (258)
AND (259)
NOT (260)
IDF (261)
NEGACAO (262)
ASPAS (263)
ATRIBUICAO (264) 29
SOMA (265) 45
SUBTRACAO (266) 46
MULTIPLICACAO (267) 47
DIVISAO (268) 48
RESTO (269) 49
ABRE_PARENTESES (270) 37
FECHA_PARENTESES (271) 38
ABRE_CHAVE (272) 35
FECHA_CHAVE (273) 36
ABRE_COLCHETE (274)
FECHA_COLCHETE (275)
PONTO_E_VIRGULA (276) 31
DOIS_PONTOS (277)
VIRGULA (278) 32
HASHMARK (279)
PONTO (280)
PIPE (281)
BARRA (282)
MAIOR (283) 41
MENOR (284) 42
MAIOR_IGUAL (285) 43
MENOR_IGUAL (286) 44
IGUAL (287) 40
DIFERENTE (288)
ESPACO (289)
BARRAN (290)
BARRAT (291)
DIGITO (292)
NUMERAL (293)
LETRA (294)
FRAC_OPT (295)
NUM (296) 51
RES_BREAK (297)
RES_CASE (298)
RES_CHAR (299)
RES_DEFAULT (300)
RES_DO (301)
RES_DOUBLE (302) 55
RES_ELSE (303) 34
RES_FLOAT (304) 52
RES_FOR (305) 22
RES_GOTO (306)
RES_IF (307) 33
RES_INT (308) 53
RES_LONG (309)
RES_RETURN (310)
RES_SIZEOF (311)
RES_STATIC (312)
RES_STRUCT (313)
RES_TYPEDEF (314)
RES_VOID (315)
RES_WHILE (316)
NOME (317) 30
STRING (318) 54
ALGUMA_COISA (319)
RES_BOOL (320) 56


Não terminais com as regras onde eles aparecem

$accept (70)
    à esquerda: 0
root (71)
    à esquerda: 1, à direita: 0
code (72)
    à esquerda: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21,
    à direita: 1 3 5 6 7 8 9 11 14 15 18 19 20 21
for (73)
    à esquerda: 22, à direita: 20 21
parameters (74)
    à esquerda: 23 24, à direita: 16 17 18 19 24
recursionOP (75)
    à esquerda: 25 26, à direita: 4 5 10 11 26
recursionDec (76)
    à esquerda: 27 28, à direita: 2 3 28
assignment (77)
    à esquerda: 29, à direita: 4 5 10 11 20 21
var (78)
    à esquerda: 30, à direita: 10 11 12 13 14 15 16 17 18 19 20 21
    39 50
semi (79)
    à esquerda: 31, à direita: 13 14 17 18 20 21 25 27
comma (80)
    à esquerda: 32, à direita: 24 28
if (81)
    à esquerda: 33, à direita: 6 7 8 9
else (82)
    à esquerda: 34, à direita: 8 9
openKey (83)
    à esquerda: 35, à direita: 6 7 8 9 15 19 20 21
closeKey (84)
    à esquerda: 36, à direita: 6 7 8 9 15 19 20 21
openParent (85)
    à esquerda: 37, à direita: 6 7 8 12 13 14 15 16 17 18 19 20 21
closeParent (86)
    à esquerda: 38, à direita: 6 7 8 12 13 14 15 16 17 18 19 20 21
declaration (87)
    à esquerda: 39, à direita: 2 3 4 5 28
boolean_exp (88)
    à esquerda: 40 41 42 43 44, à direita: 6 7 8 9 20 21
op (89)
    à esquerda: 45 46 47 48 49, à direita: 20 21 26
value (90)
    à esquerda: 50 51, à direita: 4 5 6 7 8 9 10 11 20 21 23 24 26
type (91)
    à esquerda: 52 53 54 55 56, à direita: 39


Estado 0

    0 $accept: . root $end

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    root         ir ao estado 9
    code         ir ao estado 10
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 1

   55 type: RES_DOUBLE .

    $padrão  reduzir usando a regra 55 (type)


Estado 2

   52 type: RES_FLOAT .

    $padrão  reduzir usando a regra 52 (type)


Estado 3

   22 for: RES_FOR .

    $padrão  reduzir usando a regra 22 (for)


Estado 4

   33 if: RES_IF .

    $padrão  reduzir usando a regra 33 (if)


Estado 5

   53 type: RES_INT .

    $padrão  reduzir usando a regra 53 (type)


Estado 6

   30 var: NOME .

    $padrão  reduzir usando a regra 30 (var)


Estado 7

   54 type: STRING .

    $padrão  reduzir usando a regra 54 (type)


Estado 8

   56 type: RES_BOOL .

    $padrão  reduzir usando a regra 56 (type)


Estado 9

    0 $accept: root . $end

    $end  deslocar, e ir ao estado 16


Estado 10

    1 root: code .

    $padrão  reduzir usando a regra 1 (root)


Estado 11

   20 code: for . openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey
   21     | for . openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey code

    ABRE_PARENTESES  deslocar, e ir ao estado 17

    openParent  ir ao estado 18


Estado 12

   10 code: var . assignment value recursionOP
   11     | var . assignment value recursionOP code
   12     | var . openParent closeParent
   13     | var . openParent closeParent semi
   14     | var . openParent closeParent semi code
   15     | var . openParent closeParent openKey code closeKey code
   16     | var . openParent parameters closeParent
   17     | var . openParent parameters closeParent semi
   18     | var . openParent parameters closeParent semi code
   19     | var . openParent parameters closeParent openKey code closeKey code

    ATRIBUICAO       deslocar, e ir ao estado 19
    ABRE_PARENTESES  deslocar, e ir ao estado 17

    assignment  ir ao estado 20
    openParent  ir ao estado 21


Estado 13

    6 code: if . openParent value boolean_exp value closeParent openKey code closeKey
    7     | if . openParent value boolean_exp value closeParent openKey code closeKey code
    8     | if . openParent value boolean_exp value closeParent openKey code closeKey else openKey code closeKey
    9     | if . value boolean_exp value openKey code closeKey else openKey code closeKey code

    ABRE_PARENTESES  deslocar, e ir ao estado 17
    NUM              deslocar, e ir ao estado 22
    NOME             deslocar, e ir ao estado 6

    var         ir ao estado 23
    openParent  ir ao estado 24
    value       ir ao estado 25


Estado 14

    2 code: declaration . recursionDec
    3     | declaration . recursionDec code
    4     | declaration . assignment value recursionOP
    5     | declaration . assignment value recursionOP code

    ATRIBUICAO       deslocar, e ir ao estado 19
    PONTO_E_VIRGULA  deslocar, e ir ao estado 26
    VIRGULA          deslocar, e ir ao estado 27

    recursionDec  ir ao estado 28
    assignment    ir ao estado 29
    semi          ir ao estado 30
    comma         ir ao estado 31


Estado 15

   39 declaration: type . var

    NOME  deslocar, e ir ao estado 6

    var  ir ao estado 32


Estado 16

    0 $accept: root $end .

    $padrão  aceitar


Estado 17

   37 openParent: ABRE_PARENTESES .

    $padrão  reduzir usando a regra 37 (openParent)


Estado 18

   20 code: for openParent . var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent . var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey code

    NOME  deslocar, e ir ao estado 6

    var  ir ao estado 33


Estado 19

   29 assignment: ATRIBUICAO .

    $padrão  reduzir usando a regra 29 (assignment)


Estado 20

   10 code: var assignment . value recursionOP
   11     | var assignment . value recursionOP code

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 34


Estado 21

   12 code: var openParent . closeParent
   13     | var openParent . closeParent semi
   14     | var openParent . closeParent semi code
   15     | var openParent . closeParent openKey code closeKey code
   16     | var openParent . parameters closeParent
   17     | var openParent . parameters closeParent semi
   18     | var openParent . parameters closeParent semi code
   19     | var openParent . parameters closeParent openKey code closeKey code

    FECHA_PARENTESES  deslocar, e ir ao estado 35
    NUM               deslocar, e ir ao estado 22
    NOME              deslocar, e ir ao estado 6

    parameters   ir ao estado 36
    var          ir ao estado 23
    closeParent  ir ao estado 37
    value        ir ao estado 38


Estado 22

   51 value: NUM .

    $padrão  reduzir usando a regra 51 (value)


Estado 23

   50 value: var .

    $padrão  reduzir usando a regra 50 (value)


Estado 24

    6 code: if openParent . value boolean_exp value closeParent openKey code closeKey
    7     | if openParent . value boolean_exp value closeParent openKey code closeKey code
    8     | if openParent . value boolean_exp value closeParent openKey code closeKey else openKey code closeKey

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 39


Estado 25

    9 code: if value . boolean_exp value openKey code closeKey else openKey code closeKey code

    MAIOR        deslocar, e ir ao estado 40
    MENOR        deslocar, e ir ao estado 41
    MAIOR_IGUAL  deslocar, e ir ao estado 42
    MENOR_IGUAL  deslocar, e ir ao estado 43
    IGUAL        deslocar, e ir ao estado 44

    boolean_exp  ir ao estado 45


Estado 26

   31 semi: PONTO_E_VIRGULA .

    $padrão  reduzir usando a regra 31 (semi)


Estado 27

   32 comma: VIRGULA .

    $padrão  reduzir usando a regra 32 (comma)


Estado 28

    2 code: declaration recursionDec .
    3     | declaration recursionDec . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    $padrão  reduzir usando a regra 2 (code)

    code         ir ao estado 46
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 29

    4 code: declaration assignment . value recursionOP
    5     | declaration assignment . value recursionOP code

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 47


Estado 30

   27 recursionDec: semi .

    $padrão  reduzir usando a regra 27 (recursionDec)


Estado 31

   28 recursionDec: comma . declaration recursionDec

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_INT     deslocar, e ir ao estado 5
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    declaration  ir ao estado 48
    type         ir ao estado 15


Estado 32

   39 declaration: type var .

    $padrão  reduzir usando a regra 39 (declaration)


Estado 33

   20 code: for openParent var . assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent var . assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey code

    ATRIBUICAO  deslocar, e ir ao estado 19

    assignment  ir ao estado 49


Estado 34

   10 code: var assignment value . recursionOP
   11     | var assignment value . recursionOP code

    SOMA             deslocar, e ir ao estado 50
    SUBTRACAO        deslocar, e ir ao estado 51
    MULTIPLICACAO    deslocar, e ir ao estado 52
    DIVISAO          deslocar, e ir ao estado 53
    RESTO            deslocar, e ir ao estado 54
    PONTO_E_VIRGULA  deslocar, e ir ao estado 26

    recursionOP  ir ao estado 55
    semi         ir ao estado 56
    op           ir ao estado 57


Estado 35

   38 closeParent: FECHA_PARENTESES .

    $padrão  reduzir usando a regra 38 (closeParent)


Estado 36

   16 code: var openParent parameters . closeParent
   17     | var openParent parameters . closeParent semi
   18     | var openParent parameters . closeParent semi code
   19     | var openParent parameters . closeParent openKey code closeKey code

    FECHA_PARENTESES  deslocar, e ir ao estado 35

    closeParent  ir ao estado 58


Estado 37

   12 code: var openParent closeParent .
   13     | var openParent closeParent . semi
   14     | var openParent closeParent . semi code
   15     | var openParent closeParent . openKey code closeKey code

    ABRE_CHAVE       deslocar, e ir ao estado 59
    PONTO_E_VIRGULA  deslocar, e ir ao estado 26

    $padrão  reduzir usando a regra 12 (code)

    semi     ir ao estado 60
    openKey  ir ao estado 61


Estado 38

   23 parameters: value .
   24           | value . comma parameters

    VIRGULA  deslocar, e ir ao estado 27

    $padrão  reduzir usando a regra 23 (parameters)

    comma  ir ao estado 62


Estado 39

    6 code: if openParent value . boolean_exp value closeParent openKey code closeKey
    7     | if openParent value . boolean_exp value closeParent openKey code closeKey code
    8     | if openParent value . boolean_exp value closeParent openKey code closeKey else openKey code closeKey

    MAIOR        deslocar, e ir ao estado 40
    MENOR        deslocar, e ir ao estado 41
    MAIOR_IGUAL  deslocar, e ir ao estado 42
    MENOR_IGUAL  deslocar, e ir ao estado 43
    IGUAL        deslocar, e ir ao estado 44

    boolean_exp  ir ao estado 63


Estado 40

   41 boolean_exp: MAIOR .

    $padrão  reduzir usando a regra 41 (boolean_exp)


Estado 41

   42 boolean_exp: MENOR .

    $padrão  reduzir usando a regra 42 (boolean_exp)


Estado 42

   43 boolean_exp: MAIOR_IGUAL .

    $padrão  reduzir usando a regra 43 (boolean_exp)


Estado 43

   44 boolean_exp: MENOR_IGUAL .

    $padrão  reduzir usando a regra 44 (boolean_exp)


Estado 44

   40 boolean_exp: IGUAL .

    $padrão  reduzir usando a regra 40 (boolean_exp)


Estado 45

    9 code: if value boolean_exp . value openKey code closeKey else openKey code closeKey code

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 64


Estado 46

    3 code: declaration recursionDec code .

    $padrão  reduzir usando a regra 3 (code)


Estado 47

    4 code: declaration assignment value . recursionOP
    5     | declaration assignment value . recursionOP code

    SOMA             deslocar, e ir ao estado 50
    SUBTRACAO        deslocar, e ir ao estado 51
    MULTIPLICACAO    deslocar, e ir ao estado 52
    DIVISAO          deslocar, e ir ao estado 53
    RESTO            deslocar, e ir ao estado 54
    PONTO_E_VIRGULA  deslocar, e ir ao estado 26

    recursionOP  ir ao estado 65
    semi         ir ao estado 56
    op           ir ao estado 57


Estado 48

   28 recursionDec: comma declaration . recursionDec

    PONTO_E_VIRGULA  deslocar, e ir ao estado 26
    VIRGULA          deslocar, e ir ao estado 27

    recursionDec  ir ao estado 66
    semi          ir ao estado 30
    comma         ir ao estado 31


Estado 49

   20 code: for openParent var assignment . value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment . value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey code

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 67


Estado 50

   45 op: SOMA .

    $padrão  reduzir usando a regra 45 (op)


Estado 51

   46 op: SUBTRACAO .

    $padrão  reduzir usando a regra 46 (op)


Estado 52

   47 op: MULTIPLICACAO .

    $padrão  reduzir usando a regra 47 (op)


Estado 53

   48 op: DIVISAO .

    $padrão  reduzir usando a regra 48 (op)


Estado 54

   49 op: RESTO .

    $padrão  reduzir usando a regra 49 (op)


Estado 55

   10 code: var assignment value recursionOP .
   11     | var assignment value recursionOP . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    $padrão  reduzir usando a regra 10 (code)

    code         ir ao estado 68
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 56

   25 recursionOP: semi .

    $padrão  reduzir usando a regra 25 (recursionOP)


Estado 57

   26 recursionOP: op . value recursionOP

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 69


Estado 58

   16 code: var openParent parameters closeParent .
   17     | var openParent parameters closeParent . semi
   18     | var openParent parameters closeParent . semi code
   19     | var openParent parameters closeParent . openKey code closeKey code

    ABRE_CHAVE       deslocar, e ir ao estado 59
    PONTO_E_VIRGULA  deslocar, e ir ao estado 26

    $padrão  reduzir usando a regra 16 (code)

    semi     ir ao estado 70
    openKey  ir ao estado 71


Estado 59

   35 openKey: ABRE_CHAVE .

    $padrão  reduzir usando a regra 35 (openKey)


Estado 60

   13 code: var openParent closeParent semi .
   14     | var openParent closeParent semi . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    $padrão  reduzir usando a regra 13 (code)

    code         ir ao estado 72
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 61

   15 code: var openParent closeParent openKey . code closeKey code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 73
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 62

   24 parameters: value comma . parameters

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    parameters  ir ao estado 74
    var         ir ao estado 23
    value       ir ao estado 38


Estado 63

    6 code: if openParent value boolean_exp . value closeParent openKey code closeKey
    7     | if openParent value boolean_exp . value closeParent openKey code closeKey code
    8     | if openParent value boolean_exp . value closeParent openKey code closeKey else openKey code closeKey

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 75


Estado 64

    9 code: if value boolean_exp value . openKey code closeKey else openKey code closeKey code

    ABRE_CHAVE  deslocar, e ir ao estado 59

    openKey  ir ao estado 76


Estado 65

    4 code: declaration assignment value recursionOP .
    5     | declaration assignment value recursionOP . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    $padrão  reduzir usando a regra 4 (code)

    code         ir ao estado 77
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 66

   28 recursionDec: comma declaration recursionDec .

    $padrão  reduzir usando a regra 28 (recursionDec)


Estado 67

   20 code: for openParent var assignment value . semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment value . semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey code

    PONTO_E_VIRGULA  deslocar, e ir ao estado 26

    semi  ir ao estado 78


Estado 68

   11 code: var assignment value recursionOP code .

    $padrão  reduzir usando a regra 11 (code)


Estado 69

   26 recursionOP: op value . recursionOP

    SOMA             deslocar, e ir ao estado 50
    SUBTRACAO        deslocar, e ir ao estado 51
    MULTIPLICACAO    deslocar, e ir ao estado 52
    DIVISAO          deslocar, e ir ao estado 53
    RESTO            deslocar, e ir ao estado 54
    PONTO_E_VIRGULA  deslocar, e ir ao estado 26

    recursionOP  ir ao estado 79
    semi         ir ao estado 56
    op           ir ao estado 57


Estado 70

   17 code: var openParent parameters closeParent semi .
   18     | var openParent parameters closeParent semi . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    $padrão  reduzir usando a regra 17 (code)

    code         ir ao estado 80
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 71

   19 code: var openParent parameters closeParent openKey . code closeKey code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 81
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 72

   14 code: var openParent closeParent semi code .

    $padrão  reduzir usando a regra 14 (code)


Estado 73

   15 code: var openParent closeParent openKey code . closeKey code

    FECHA_CHAVE  deslocar, e ir ao estado 82

    closeKey  ir ao estado 83


Estado 74

   24 parameters: value comma parameters .

    $padrão  reduzir usando a regra 24 (parameters)


Estado 75

    6 code: if openParent value boolean_exp value . closeParent openKey code closeKey
    7     | if openParent value boolean_exp value . closeParent openKey code closeKey code
    8     | if openParent value boolean_exp value . closeParent openKey code closeKey else openKey code closeKey

    FECHA_PARENTESES  deslocar, e ir ao estado 35

    closeParent  ir ao estado 84


Estado 76

    9 code: if value boolean_exp value openKey . code closeKey else openKey code closeKey code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 85
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 77

    5 code: declaration assignment value recursionOP code .

    $padrão  reduzir usando a regra 5 (code)


Estado 78

   20 code: for openParent var assignment value semi . var boolean_exp value semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi . var boolean_exp value semi var assignment var op value closeParent openKey code closeKey code

    NOME  deslocar, e ir ao estado 6

    var  ir ao estado 86


Estado 79

   26 recursionOP: op value recursionOP .

    $padrão  reduzir usando a regra 26 (recursionOP)


Estado 80

   18 code: var openParent parameters closeParent semi code .

    $padrão  reduzir usando a regra 18 (code)


Estado 81

   19 code: var openParent parameters closeParent openKey code . closeKey code

    FECHA_CHAVE  deslocar, e ir ao estado 82

    closeKey  ir ao estado 87


Estado 82

   36 closeKey: FECHA_CHAVE .

    $padrão  reduzir usando a regra 36 (closeKey)


Estado 83

   15 code: var openParent closeParent openKey code closeKey . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 88
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 84

    6 code: if openParent value boolean_exp value closeParent . openKey code closeKey
    7     | if openParent value boolean_exp value closeParent . openKey code closeKey code
    8     | if openParent value boolean_exp value closeParent . openKey code closeKey else openKey code closeKey

    ABRE_CHAVE  deslocar, e ir ao estado 59

    openKey  ir ao estado 89


Estado 85

    9 code: if value boolean_exp value openKey code . closeKey else openKey code closeKey code

    FECHA_CHAVE  deslocar, e ir ao estado 82

    closeKey  ir ao estado 90


Estado 86

   20 code: for openParent var assignment value semi var . boolean_exp value semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var . boolean_exp value semi var assignment var op value closeParent openKey code closeKey code

    MAIOR        deslocar, e ir ao estado 40
    MENOR        deslocar, e ir ao estado 41
    MAIOR_IGUAL  deslocar, e ir ao estado 42
    MENOR_IGUAL  deslocar, e ir ao estado 43
    IGUAL        deslocar, e ir ao estado 44

    boolean_exp  ir ao estado 91


Estado 87

   19 code: var openParent parameters closeParent openKey code closeKey . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 92
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 88

   15 code: var openParent closeParent openKey code closeKey code .

    $padrão  reduzir usando a regra 15 (code)


Estado 89

    6 code: if openParent value boolean_exp value closeParent openKey . code closeKey
    7     | if openParent value boolean_exp value closeParent openKey . code closeKey code
    8     | if openParent value boolean_exp value closeParent openKey . code closeKey else openKey code closeKey

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 93
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 90

    9 code: if value boolean_exp value openKey code closeKey . else openKey code closeKey code

    RES_ELSE  deslocar, e ir ao estado 94

    else  ir ao estado 95


Estado 91

   20 code: for openParent var assignment value semi var boolean_exp . value semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp . value semi var assignment var op value closeParent openKey code closeKey code

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 96


Estado 92

   19 code: var openParent parameters closeParent openKey code closeKey code .

    $padrão  reduzir usando a regra 19 (code)


Estado 93

    6 code: if openParent value boolean_exp value closeParent openKey code . closeKey
    7     | if openParent value boolean_exp value closeParent openKey code . closeKey code
    8     | if openParent value boolean_exp value closeParent openKey code . closeKey else openKey code closeKey

    FECHA_CHAVE  deslocar, e ir ao estado 82

    closeKey  ir ao estado 97


Estado 94

   34 else: RES_ELSE .

    $padrão  reduzir usando a regra 34 (else)


Estado 95

    9 code: if value boolean_exp value openKey code closeKey else . openKey code closeKey code

    ABRE_CHAVE  deslocar, e ir ao estado 59

    openKey  ir ao estado 98


Estado 96

   20 code: for openParent var assignment value semi var boolean_exp value . semi var assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value . semi var assignment var op value closeParent openKey code closeKey code

    PONTO_E_VIRGULA  deslocar, e ir ao estado 26

    semi  ir ao estado 99


Estado 97

    6 code: if openParent value boolean_exp value closeParent openKey code closeKey .
    7     | if openParent value boolean_exp value closeParent openKey code closeKey . code
    8     | if openParent value boolean_exp value closeParent openKey code closeKey . else openKey code closeKey

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_ELSE    deslocar, e ir ao estado 94
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    $padrão  reduzir usando a regra 6 (code)

    code         ir ao estado 100
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    else         ir ao estado 101
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 98

    9 code: if value boolean_exp value openKey code closeKey else openKey . code closeKey code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 102
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 99

   20 code: for openParent var assignment value semi var boolean_exp value semi . var assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi . var assignment var op value closeParent openKey code closeKey code

    NOME  deslocar, e ir ao estado 6

    var  ir ao estado 103


Estado 100

    7 code: if openParent value boolean_exp value closeParent openKey code closeKey code .

    $padrão  reduzir usando a regra 7 (code)


Estado 101

    8 code: if openParent value boolean_exp value closeParent openKey code closeKey else . openKey code closeKey

    ABRE_CHAVE  deslocar, e ir ao estado 59

    openKey  ir ao estado 104


Estado 102

    9 code: if value boolean_exp value openKey code closeKey else openKey code . closeKey code

    FECHA_CHAVE  deslocar, e ir ao estado 82

    closeKey  ir ao estado 105


Estado 103

   20 code: for openParent var assignment value semi var boolean_exp value semi var . assignment var op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var . assignment var op value closeParent openKey code closeKey code

    ATRIBUICAO  deslocar, e ir ao estado 19

    assignment  ir ao estado 106


Estado 104

    8 code: if openParent value boolean_exp value closeParent openKey code closeKey else openKey . code closeKey

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 107
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 105

    9 code: if value boolean_exp value openKey code closeKey else openKey code closeKey . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 108
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 106

   20 code: for openParent var assignment value semi var boolean_exp value semi var assignment . var op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment . var op value closeParent openKey code closeKey code

    NOME  deslocar, e ir ao estado 6

    var  ir ao estado 109


Estado 107

    8 code: if openParent value boolean_exp value closeParent openKey code closeKey else openKey code . closeKey

    FECHA_CHAVE  deslocar, e ir ao estado 82

    closeKey  ir ao estado 110


Estado 108

    9 code: if value boolean_exp value openKey code closeKey else openKey code closeKey code .

    $padrão  reduzir usando a regra 9 (code)


Estado 109

   20 code: for openParent var assignment value semi var boolean_exp value semi var assignment var . op value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment var . op value closeParent openKey code closeKey code

    SOMA           deslocar, e ir ao estado 50
    SUBTRACAO      deslocar, e ir ao estado 51
    MULTIPLICACAO  deslocar, e ir ao estado 52
    DIVISAO        deslocar, e ir ao estado 53
    RESTO          deslocar, e ir ao estado 54

    op  ir ao estado 111


Estado 110

    8 code: if openParent value boolean_exp value closeParent openKey code closeKey else openKey code closeKey .

    $padrão  reduzir usando a regra 8 (code)


Estado 111

   20 code: for openParent var assignment value semi var boolean_exp value semi var assignment var op . value closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment var op . value closeParent openKey code closeKey code

    NUM   deslocar, e ir ao estado 22
    NOME  deslocar, e ir ao estado 6

    var    ir ao estado 23
    value  ir ao estado 112


Estado 112

   20 code: for openParent var assignment value semi var boolean_exp value semi var assignment var op value . closeParent openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment var op value . closeParent openKey code closeKey code

    FECHA_PARENTESES  deslocar, e ir ao estado 35

    closeParent  ir ao estado 113


Estado 113

   20 code: for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent . openKey code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent . openKey code closeKey code

    ABRE_CHAVE  deslocar, e ir ao estado 59

    openKey  ir ao estado 114


Estado 114

   20 code: for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey . code closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey . code closeKey code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    code         ir ao estado 115
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 115

   20 code: for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code . closeKey
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code . closeKey code

    FECHA_CHAVE  deslocar, e ir ao estado 82

    closeKey  ir ao estado 116


Estado 116

   20 code: for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey .
   21     | for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey . code

    RES_DOUBLE  deslocar, e ir ao estado 1
    RES_FLOAT   deslocar, e ir ao estado 2
    RES_FOR     deslocar, e ir ao estado 3
    RES_IF      deslocar, e ir ao estado 4
    RES_INT     deslocar, e ir ao estado 5
    NOME        deslocar, e ir ao estado 6
    STRING      deslocar, e ir ao estado 7
    RES_BOOL    deslocar, e ir ao estado 8

    $padrão  reduzir usando a regra 20 (code)

    code         ir ao estado 117
    for          ir ao estado 11
    var          ir ao estado 12
    if           ir ao estado 13
    declaration  ir ao estado 14
    type         ir ao estado 15


Estado 117

   21 code: for openParent var assignment value semi var boolean_exp value semi var assignment var op value closeParent openKey code closeKey code .

    $padrão  reduzir usando a regra 21 (code)
